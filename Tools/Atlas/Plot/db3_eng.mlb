NesMemory:0329:currentEnemy
NesMemory:2000:PpuControl_2000:7  bit  0\n---- ----\nVPHB SINN\n|||| ||||\n|||| ||++- Base nametable address\n|||| ||    (0 = $2000; 1 = $2400; 2 = $2800; 3 = $2C00)\n|||| |+--- VRAM address increment per CPU read/write of PPUDATA\n|||| |     (0: add 1, going across; 1: add 32, going down)\n|||| +---- Sprite pattern table address for 8x8 sprites\n||||       (0: $0000; 1: $1000; ignored in 8x16 mode)\n|||+------ Background pattern table address (0: $0000; 1: $1000)\n||+------- Sprite size (0: 8x8; 1: 8x16)\n|+-------- PPU master/slave select\n|          (0: read backdrop from EXT pins; 1: output color on EXT pins)\n+--------- Generate an NMI at the start of the\n           vertical blanking interval (0: off; 1: on)
NesMemory:2001:PpuMask_2001:7  bit  0\n---- ----\nBGRs bMmG\n|||| ||||\n|||| |||+- Display type: (0: color, 1: grayscale)\n|||| ||+-- 1: Show background in leftmost 8 pixels of screen, 0: Hide\n|||| |+--- 1: Show sprites in leftmost 8 pixels of screen, 0: Hide\n|||| +---- 1: Show background\n|||+------ 1: Show sprites\n||+------- Emphasize red\n|+-------- Emphasize green\n+--------- Emphasize blue
NesMemory:2002:PpuStatus_2002:7  bit  0\n---- ----\nVSO. ....\n|||| ||||\n|||+-++++- Least significant bits previously written into a PPU register\n|||        (due to register not being updated for this address)\n||+------- Sprite overflow. The intent was for this flag to be set\n||         whenever more than eight sprites appear on a scanline, but a\n||         hardware bug causes the actual behavior to be more complicated\n||         and generate false positives as well as false negatives; see\n||         PPU sprite evaluation. This flag is set during sprite\n||         evaluation and cleared at dot 1 (the second dot) of the\n||         pre-render line.\n|+-------- Sprite 0 Hit.  Set when a nonzero pixel of sprite 0 overlaps\n|          a nonzero background pixel; cleared at dot 1 of the pre-render\n|          line.  Used for raster timing.\n+--------- Vertical blank has started (0: not in vblank; 1: in vblank).\n           Set at dot 1 of line 241 (the line *after* the post-render\n           line); cleared after reading $2002 and at dot 1 of the\n           pre-render line.
NesMemory:2003:OamAddr_2003:Set OAM address - Write only
NesMemory:2004:OamData_2004:Read/Write OAM data
NesMemory:2005:PpuScroll_2005:Set PPU scroll, write twice - Write only
NesMemory:2006:PpuAddr_2006:Set PPU address, write twice - Write only
NesMemory:2007:PpuData_2007:Read/Write VRAM
NesMemory:4000:Sq0Duty_4000:DDLC VVVV\nDuty (D), envelope loop / length counter halt (L), constant volume (C), volume/envelope (V)
NesMemory:4001:Sq0Sweep_4001:EPPP NSSS\nSweep unit: enabled (E), period (P), negate (N), shift (S)
NesMemory:4002:Sq0Timer_4002:TTTT TTTT\nTimer low (T)
NesMemory:4003:Sq0Length_4003:LLLL LTTT\nLength counter load (L), timer high (T)
NesMemory:4004:Sq1Duty_4004:DDLC VVVV\nDuty (D), envelope loop / length counter halt (L), constant volume (C), volume/envelope (V)
NesMemory:4005:Sq1Sweep_4005:EPPP NSSS\nSweep unit: enabled (E), period (P), negate (N), shift (S)
NesMemory:4006:Sq1Timer_4006:TTTT TTTT\nTimer low (T)
NesMemory:4007:Sq1Length_4007:LLLL LTTT\nLength counter load (L), timer high (T)
NesMemory:4008:TrgLinear_4008:CRRR RRRR\nLength counter halt / linear counter control (C), linear counter load (R)
NesMemory:400A:TrgTimer_400A:TTTT TTTT\nTimer low (T)
NesMemory:400B:TrgLength_400B:LLLL LTTT\nLength counter load (L), timer high (T)
NesMemory:400C:NoiseVolume_400C:--LC VVVV\nEnvelope loop / length counter halt (L), constant volume (C), volume/envelope (V)
NesMemory:400E:NoisePeriod_400E:L--- PPPP\nLoop noise (L), noise period (P)
NesMemory:400F:NoiseLength_400F:LLLL L---\nLength counter load (L)
NesMemory:4010:DmcFreq_4010:IL-- RRRR\nIRQ enable (I), loop (L), frequency (R)
NesMemory:4011:DmcCounter_4011:-DDD DDDD\nLoad counter (D)
NesMemory:4012:DmcAddress_4012:AAAA AAAA\nSample address (A)
NesMemory:4013:DmcLength_4013:LLLL LLLL\nSample length (L)
NesMemory:4014:SpriteDma_4014:Writing $XX will upload 256 bytes of data from CPU page $XX00-$XXFF to the internal PPU OAM.
NesMemory:4015:ApuStatus_4015:Read:\nIF-D NT21\nDMC interrupt (I), frame interrupt (F), DMC active (D), length counter > 0 (N/T/2/1)\n\nWrite:\n---D NT21\nEnable DMC (D), noise (N), triangle (T), and pulse channels (2/1)
NesMemory:4016:Ctrl1_4016:Read (NES - input):\n---4 3210\nRead data from controller port #1.\n\nWrite:\n---- ---A\nOutput data (strobe) to both controllers.
NesMemory:4017:Ctrl2_FrameCtr_4017:Read (NES - input):\n---4 3210\nRead data from controller port #2.\n\nWrite (Frame counter): MI-- ----\nMode (M, 0 = 4-step, 1 = 5-step), IRQ inhibit flag (I)
NesMemory:6000:CHR_ROM_Bank_1:Select 1 KiB CHR-ROM bank at PPU $0000-$03FF
NesMemory:6001:CHR_ROM_Bank_2:Select 1 KiB CHR-ROM bank at PPU $0400-$07FF
NesMemory:6002:CHR_ROM_Bank_3:Select 1 KiB CHR-ROM bank at PPU $0800-$0BFF
NesMemory:6004:CHR_ROM_Bank_5:Select 1 KiB CHR-ROM bank at PPU $1000-$13FF
NesMemory:6005:CHR_ROM_Bank_6:Select 1 KiB CHR-ROM bank at PPU $1400-$17FF
NesMemory:6006:CHR_ROM_Bank_7:Select 1 KiB CHR-ROM bank at PPU $1800-$1BFF
NesMemory:6007:CHR_ROM_Bank_8:Select 1 KiB CHR-ROM bank at PPU $1C00-$1FFF
NesMemory:6008:PRG_ROM_Bank:Mask: $E00F (Submapper 4), $800F (Submapper 5)\n\n7  bit  0\n---- ----\n.... PPPP\n     ||||\n     ++++-- Select 16 KiB PRG-ROM bank at CPU $8000-$BFFF  
NesMemory:6009:Nametable_Mirroring_Type:Mask: $E00F (Submapper 4), $800F (Submapper 5)\n\n7  bit  0\n---- ----\n.... ..MM\n       ||\n       ++-- Select nametable mirroring type\n             0: Vertical\n             1: Horizontal\n             2: One-screen, page 0\n             3: One-screen, page 1
NesMemory:600A:IRQ_Control:Mask: $E00F (Submapper 4), $800F (Submapper 5)\n\n7  bit  0\n---- ----\n.... ...C\n        |\n        +-- IRQ counter control\n             0: Counting disabled\n             1: Counting enabled\n;Writing to this register acknowledges a pending IRQ.\n;On the LZ93D50 (Submapper 5), writing to this register also copies the latch to the actual counter.\n;If a write to this register enables counting while the counter is holding a value of zero, an IRQ is generated immediately.
NesMemory:600B:IRQ_Latch_slash_Counter_LowByte:Mask: $E00F (Submapper 4), $800F (Submapper 5)\n\n   $C         $B\n7  bit  0  7  bit  0\n---- ----  ---- ----\nCCCC CCCC  CCCC CCCC\n|||| ||||  |||| ||||\n++++-++++--++++-++++-- Counter value (little-endian)\n;If counting is enabled, the counter decreases on every M2 cycle. When it holds a value of zero, an IRQ is generated.\n;On the FCG-1/2 (Submapper 4), writing to these two registers directly modifies the counter itself; all such games therefore disable counting before changing the counter value.\n;On the LZ93D50 (Submapper 5), these registers instead modify a latch that will only be copied to the actual counter when register $800A is written to.
NesMemory:600C:IRQ_Latch_slash_Counter_HighByte:Mask: $E00F (Submapper 4), $800F (Submapper 5)\n\n   $C         $B\n7  bit  0  7  bit  0\n---- ----  ---- ----\nCCCC CCCC  CCCC CCCC\n|||| ||||  |||| ||||\n++++-++++--++++-++++-- Counter value (little-endian)\n;If counting is enabled, the counter decreases on every M2 cycle. When it holds a value of zero, an IRQ is generated.\n;On the FCG-1/2 (Submapper 4), writing to these two registers directly modifies the counter itself; all such games therefore disable counting before changing the counter value.\n;On the LZ93D50 (Submapper 5), these registers instead modify a latch that will only be copied to the actual counter when register $800A is written to.
NesMemory:FFF0:battleModeDebug
NesPrgRom:C83D:checkForMaxLineLength
NesPrgRom:C850:newLineLogic
NesPrgRom:1C000:JMP_TABLE
NesPrgRom:1C003:JMP_TABLE_screenSwitchingLogic
NesPrgRom:1C021:JMP_TABLE_Switch_Nametable_Mirroring_Type
NesPrgRom:1C036:JMP_TABLE_RNG_Routine
NesPrgRom:1C045:JMP_TABLE_textRoutine
NesPrgRom:1C0D8:initializeGameState
NesPrgRom:1C17D:screenSwitchingLogic
NesPrgRom:1D8F2:RNG_Routine
NesPrgRom:1DAFE:Switch_CHR_ROM_Bank_1
NesPrgRom:1DB04:Switch_CHR_ROM_Bank_2
NesPrgRom:1DB0A:Switch_CHR_ROM_Bank_3
NesPrgRom:1DB10:Switch_CHR_ROM_Bank_4
NesPrgRom:1DB16:Switch_CHR_ROM_Bank_5
NesPrgRom:1DB1C:Switch_CHR_ROM_Bank_6
NesPrgRom:1DB22:Switch_CHR_ROM_Bank_7
NesPrgRom:1DB28:Switch_CHR_ROM_Bank_8
NesPrgRom:1DB2E:Switch_PRG_ROM_Bank
NesPrgRom:1DB34:Switch_Nametable_Mirroring_Type
NesPrgRom:1DB3A:Handle_IRQ_Control
NesPrgRom:1DB40:Handle_IRQ_Latch_slash_Counter_LowByte
NesPrgRom:1DB46:Handle_IRQ_Latch_slash_Counter_HighByte
NesPrgRom:1DFBB:characterHasHandakuten
NesPrgRom:1DFC1:characterHasNoHandakuten
NesPrgRom:1DFD6:translateCharacterToPPUTable
NesPrgRom:1E047:textRoutine
NesPrgRom:1E052:textRoutine_load_y
NesPrgRom:1E057:textRoutine_ppu_set_up
NesPrgRom:1E069:textRoutine_vram_set_up
NesPrgRom:1E075:textRoutine_JSR_to_Handakuten_Elimination
NesPrgRom:1E078:textRoutine_preamble_to_the_end
NesPrgRom:1E07E:textRoutine_end_of_routine
NesPrgRom:1E0FE:loadTextPointer
NesPrgRom:1FFA3:textRoutine_test_text
NesPrgRom:1FFAA:textRoutine_ye_ol_check
NesPrgRom:1FFB1:textRoutine_x_check
NesPrgRom:1FFB8:textRoutine_text_reset
NesPrgRom:1FFBD:textRoutine_ppu_text_prep
NesPrgRom:1FFBF:textRoutine_pre_vram
NesPrgRom:1FFC3:textRoutine_vram_access_1
NesPrgRom:1FFCB:textRoutine_vram_access_2
NesInternalRam:004A:controllerOneInput
NesInternalRam:0062:CHR_ROM_Bank_1_Storage
NesInternalRam:0063:CHR_ROM_Bank_2_Storage
NesInternalRam:0064:CHR_ROM_Bank_3_Storage
NesInternalRam:0065:CHR_ROM_Bank_4_Storage
NesInternalRam:0066:CHR_ROM_Bank_5_Storage
NesInternalRam:0067:CHR_ROM_Bank_6_Storage
NesInternalRam:0068:CHR_ROM_Bank_7_Storage
NesInternalRam:0069:CHR_ROM_Bank_8_Storage
NesInternalRam:006A:PRG_ROM_Bank_Storage
NesInternalRam:006B:Nametable_Mirroring_Type_Storage
NesInternalRam:006C:IRQ_Control_Storage
NesInternalRam:006D:IRQ_Latch_slash_Counter_LowByte_Storage
NesInternalRam:006E:IRQ_Latch_slash_Counter_HighByte_Storage
NesInternalRam:0204:characterForPPU_Handakuten
NesInternalRam:0205:characterForPPU_Base
NesInternalRam:0322:cursorLocation
NesInternalRam:0329:currentEnemyOneID
NesInternalRam:032A:currentEnemyTwoID
NesInternalRam:032B:currentEnemyThreeID
NesInternalRam:032C:playerCharacterID
NesInternalRam:038A:currentDamage:Damage either the player or enemy will take.
NesInternalRam:038E:enemySpeed
NesInternalRam:038F:enemyPower
NesInternalRam:0390:enemyTechnique
NesInternalRam:0391:enemyDefense
NesInternalRam:03A1:enemyHP
NesInternalRam:0400:currentLevel
NesInternalRam:0401:speed
NesInternalRam:0402:power
NesInternalRam:0403:technique
NesInternalRam:0404:defense
NesInternalRam:0405:currentHP
NesInternalRam:0406:currentKi
NesInternalRam:0407:currentExperienceByte1
NesInternalRam:0408:currentExperienceByte2
NesInternalRam:0409:currentExperienceByte3
NesInternalRam:041F:maxHP
NesInternalRam:0420:maxKi
NesInternalRam:0421:xpGainedLowByte
NesInternalRam:0422:xpGainedHighByte
NesInternalRam:042D:cardOneAttack
NesInternalRam:042E:cardOneTypeAndDefense
NesInternalRam:042F:cardTwoAttack
NesInternalRam:0430:cardTwoTypeAndDefense
NesInternalRam:0431:cardThreeAttack
NesInternalRam:0432:cardThreeTypeAndDefense
NesInternalRam:0433:cardFourAttack
NesInternalRam:0434:cardFourTypeAndDefense
NesInternalRam:0435:cardFiveAttack
NesInternalRam:0436:cardFiveTypeAndDefense
NesInternalRam:0439:currentTextBoxLineLength:Including $FE or $FF control code
NesInternalRam:043A:currentTextBox
NesInternalRam:043C:textPointerByte1
NesInternalRam:043D:textPointerByte2
NesInternalRam:043F:currentLineIndex:according to RHDN Discord leina
NesInternalRam:0440:currentTextLinePosition
NesInternalRam:0495:stepsRemaining:Starts at the selected card's value and decrements with each step.
NesInternalRam:0496:boardSpaceType
NesInternalRam:04A2:areaID
NesInternalRam:04A3:areaSpaceID
NesInternalRam:0580:passwordScreenRow
NesInternalRam:0581:passwordScreenColumn
NesInternalRam:0582:passwordScreenCharacterNumber
NesWorkRam:0003:CHR_ROM_Bank_4:Select 1 KiB CHR-ROM bank at PPU $0C00-$0FFF
